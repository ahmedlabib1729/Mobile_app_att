<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">

        <!-- ============ Cron Job: Create Weekly Settlements ============ -->
        <record id="ir_cron_create_cod_settlements" model="ir.cron">
            <field name="name">COD: Create Weekly Settlements</field>
            <field name="model_id" ref="model_cod_settlement_batch"/>
            <field name="state">code</field>
            <field name="code">model._cron_create_weekly_settlements()</field>
            <field name="active" eval="True"/>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="priority">5</field>
        </record>

        <!-- ============ Cron Job: Send Settlement Reminders ============ -->
        <record id="ir_cron_send_settlement_reminders" model="ir.cron">
            <field name="name">COD: Send Settlement Reminders</field>
            <field name="model_id" ref="model_cod_settlement_batch"/>
            <field name="state">code</field>
            <field name="code">model._cron_send_settlement_reminders()</field>
            <field name="active" eval="True"/>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="priority">10</field>
        </record>

        <!-- ============ Cron Job: Check Overdue Settlements ============ -->
        <record id="ir_cron_check_overdue_settlements" model="ir.cron">
            <field name="name">COD: Check Overdue Settlements</field>
            <field name="model_id" ref="model_cod_collection"/>
            <field name="state">code</field>
            <field name="code">
# البحث عن التحصيلات المتأخرة
overdue = model.search([
    ('collection_state', 'in', ['delivered', 'collected']),
    ('expected_settlement_date', '&lt;', fields.Date.today()),
    ('is_disputed', '=', False)
])

for collection in overdue:
    # إنشاء activity للمتابعة
    collection.activity_schedule(
        'mail.mail_activity_data_todo',
        summary=f'Overdue COD Settlement - {collection.display_name}',
        note=f'This COD collection is {collection.days_overdue} days overdue. Expected settlement was on {collection.expected_settlement_date}.',
        user_id=collection.shipping_company_id.user_id.id if collection.shipping_company_id.user_id else env.user.id
    )
            </field>
            <field name="active" eval="True"/>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="priority">15</field>
        </record>

        <!-- ============ Cron Job: Update COD Statistics ============ -->
        <record id="ir_cron_update_cod_statistics" model="ir.cron">
            <field name="name">COD: Update Statistics</field>
            <field name="model_id" ref="model_shipping_company"/>
            <field name="state">code</field>
            <field name="code">
# تحديث إحصائيات COD لجميع الشركات
companies = model.search([])
for company in companies:
    # Force recompute
    company._compute_cod_statistics()
    company._compute_next_settlement_date()
            </field>
            <field name="active" eval="True"/>
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">hours</field>
            <field name="priority">20</field>
        </record>

        <!-- ============ Cron Job: Auto Reconcile Paid Settlements ============ -->
        <record id="ir_cron_auto_reconcile_settlements" model="ir.cron">
            <field name="name">COD: Auto Reconcile Settlements</field>
            <field name="model_id" ref="model_cod_settlement_batch"/>
            <field name="state">code</field>
            <field name="code">
# البحث عن الدفعات المدفوعة وغير المطابقة
batches = model.search([
    ('state', '=', 'paid'),
    ('payment_date', '!=', False),
    ('payment_amount', '>', 0)
])

for batch in batches:
    try:
        # محاولة المطابقة التلقائية
        if batch.payment_difference == 0:
            batch.action_reconcile()
            env.cr.commit()
    except Exception as e:
        # تسجيل الخطأ والمتابعة
        batch.message_post(
            body=f'Auto reconciliation failed: {str(e)}',
            subject='Auto Reconciliation Error'
        )
            </field>
            <field name="active" eval="False"/> <!-- معطل افتراضياً -->
            <field name="user_id" ref="base.user_root"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="priority">25</field>
        </record>

    </data>
</odoo>